{"version":3,"sources":["webpack://slack-react-ts/./pages/LogIn/index.tsx"],"names":["data","userData","error","revalidate","useSWR","fetcher","logInError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","catch","response","statusCode","console","log","to","id","type","name","value","onChange","href"],"mappings":"gOAQA,MA6DA,EA7Dc,KACZ,MAAQA,KAAMC,EAAR,MAAkBC,EAAlB,WAAyBC,IAAeC,QAAO,aAAcC,MAC5DC,EAAYC,IAAiBC,eAAS,IACtCC,EAAOC,IAAiBC,OAAS,KACjCC,EAAUC,IAAoBF,OAAS,IACxCG,GAAWC,kBACdC,IACCA,EAAEC,iBACFV,GAAc,GACdW,SAEI,mBACA,CAAET,QAAOG,YACT,CACEO,iBAAiB,IAGpBC,MAAK,KACJjB,OAEDkB,OAAOnB,IAAU,QAChBK,EAAmD,OAArC,UAAAL,EAAMoB,gBAAN,mBAAgBtB,YAAhB,eAAsBuB,aACpChB,GAAc,QAGpB,CAACE,EAAOG,IAIV,OADAY,QAAQC,IAAIvB,EAAOD,IACdC,GAASD,GACZuB,QAAQC,IAAI,OAAQxB,GACb,gBAAC,KAAD,CAAUyB,GAAG,kCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMb,SAAUA,GACd,gBAAC,KAAD,CAAOa,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOrB,EAAOsB,SAAUrB,MAGxE,gBAAC,KAAD,CAAOiB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOlB,EAAUmB,SAAUlB,KAEjFP,GAAc,gBAAC,KAAD,kCAEjB,gBAAC,KAAD,CAAQsB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,qBAAGI,KAAK,WAAR","file":"695.js","sourcesContent":["import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst LogIn = () => {\n  const { data: userData, error, revalidate } = useSWR('/api/users', fetcher);\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          revalidate();\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.statusCode === 401);\n          setLogInError(true);\n        });\n    },\n    [email, password],\n  );\n\n  console.log(error, userData);\n  if (!error && userData) {\n    console.log('로그인됨', userData);\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <a href=\"/signup\">회원가입 하러가기</a>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"sourceRoot":""}